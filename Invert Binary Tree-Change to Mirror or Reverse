//Invert Binary Tree â€“ Change to Mirror or Reverse

#include<iostream>
using namespace std;

class node {
    public:
    int data;
    node *left,*right;
    node(int x) {
        data=x;
        left=right=NULL;
       
    }
};

void mirror(node* root) {
    if (root == NULL)
        return;
    
    mirror(root->left);
    mirror(root->right);

    swap(root->left, root->right);
}

void inorder(node* root) {
    if (root == NULL)
        return;
    inorder(root->left);
    cout << root->data << " ";
    inorder(root->right);
}

int main() {
    node* root = new node(1);
    root->left = new node(2);
    root->right = new node(5);
    root->left->left = new node(4);
    root->left->right = new node(6);

    mirror(root);

    cout << "Inorder of the mirror is \n";
    inorder(root);

    return 0;
}
